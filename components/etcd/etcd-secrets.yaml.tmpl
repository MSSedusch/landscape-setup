<%
import os, base64
ca = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-ca.pem"), 'r').read()
ca_key = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-ca-key.pem"), 'r').read()
server = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-server.pem"), 'r').read()
server_key = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-server-key.pem"), 'r').read()
client = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-client.pem"), 'r').read()
client_key = open(os.path.join(os.environ['COMPONENT_STATE_HOME'], "etcd-client-key.pem"), 'r').read()
%>
---
apiVersion: v1
kind: Secret
metadata:
  name: ca-etcd
  namespace: ${namespace}
type: Opaque
data:
  ca.crt: ${base64.b64encode(ca)}
  ca.key: ${base64.b64encode(ca_key)}
---
apiVersion: v1
kind: Secret
metadata:
  name: etcd-server-tls
  namespace: ${namespace}
type: Opaque
data:
  ca.crt: ${base64.b64encode(ca)}
  tls.crt: ${base64.b64encode(server)}
  tls.key: ${base64.b64encode(server_key)}
---
apiVersion: v1
kind: Secret
metadata:
  name: etcd-client-tls
  namespace: ${namespace}
type: Opaque
data:
  ca.crt: ${base64.b64encode(ca)}
  tls.crt: ${base64.b64encode(client)}
  tls.key: ${base64.b64encode(client_key)}

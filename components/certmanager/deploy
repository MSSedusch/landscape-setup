#!/bin/bash -eu
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# render issuer file
mako-render ${COMPONENT_TEMPLATE_HOME}/cert-manager-issuer.yaml.tmpl >${COMPONENT_STATE_HOME}/cert-manager-issuer.yaml

# install certificate manger
helm upgrade --install \
  --force \
  --wait \
  --namespace \
  certmanager cert-manager stable/cert-manager

# install certificate manager issuer
kubectl apply -f ${COMPONENT_STATE_HOME}/cert-manager-issuer.yaml

# remove existing certificates (they will not be overwritten)

kubectl -n garden delete secret gardener-dashboard-tls
kubectl -n kube-system delete secret identity-tls  

# patch dashboard and ingress 
dashboard_issuer=$(kubectl get ingress -n garden  gardener-dashboard-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
if [ "$dashboard_issuer" != "letsencrypt" ] ; then
    kubectl -n garden patch ingress gardener-dashboard-ingress \
         -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-patch.yaml)"
fi

identity_issuer=$(kubectl get ingress -n kube-system  identity-ingress -o jsonpath="{.metadata.annotations.certmanager\.k8s\.io/cluster-issuer}")
if [ "$identity_issuer" != "letsencrypt" ] ; then
    kubectl -n kube-system patch ingress identity-ingress \
         -p="$(cat ${COMPONENT_TEMPLATE_HOME}/issuer-patch.yaml)"
fi

# find position of the line '--oidc-ca-file=/etc/kubernetes/secrets/ca.crt' and save the array position of that entry within the yaml to variable
pos=$(kubectl -n kube-system get -o template ds kube-apiserver --template='{{range $i, $elem := (index .spec.template.spec.containers 0).command}}{{if eq $elem "--oidc-ca-file=/etc/kubernetes/secrets/ca.crt"}}{{$i}}{{end}}{{end}}')
if [ $pos ]; then
    # delete that entry
    kubectl -n kube-system patch ds kube-apiserver --type json -p='[{"op": "remove", "path": "/spec/template/spec/containers/0/command/'$pos'"}]'
else
    echo "INFO: Line '--oidc-ca-file=/etc/kubernetes/secrets/ca.crt' not found in daemonset kube-apiserver."
fi
#!/bin/bash -e
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if [ $# -gt 1 ] && [ $2 == "-u" -o $2 == "--uninstall" ]; then # uninstall cert
    kubectl delete csr ca-csr --ignore-not-found
    rm -rf $COMPONENT_STATE_HOME
else # install cert
    python generate-values.py > "$COMPONENT_STATE_HOME/csr.json"

    if [ ! -f "$COMPONENT_STATE_HOME/ca-config.json" ] ; then
        cp "${COMPONENT_TEMPLATE_HOME}/ca-config.json" "$COMPONENT_STATE_HOME/ca-config.json"
    fi
    if [ ! -f "$COMPONENT_STATE_HOME/ca-csr.json" ] ; then
        cp "${COMPONENT_TEMPLATE_HOME}/ca-csr.json" "$COMPONENT_STATE_HOME/ca-csr.json"
    fi

    if [ ! -f ${COMPONENT_STATE_HOME}/ca.crt ] ; then
        cfssl gencert -initca ${COMPONENT_STATE_HOME}/ca-csr.json | cfssljson -bare ca

        mv ${COMPONENT_TEMPLATE_HOME}/ca-key.pem ${COMPONENT_STATE_HOME}/ca.key
        mv ${COMPONENT_TEMPLATE_HOME}/ca.pem ${COMPONENT_STATE_HOME}/ca.crt
        mv ${COMPONENT_TEMPLATE_HOME}/ca.csr ${COMPONENT_STATE_HOME}/ca.csr
    fi

    if [ ! -f ${COMPONENT_STATE_HOME}/tls.crt ] ; then
        cfssl gencert -ca=${COMPONENT_STATE_HOME}/ca.crt -ca-key=${COMPONENT_STATE_HOME}/ca.key -config=${COMPONENT_STATE_HOME}/ca-config.json -profile=server ${COMPONENT_STATE_HOME}/csr.json | cfssljson -bare server
        mv ${COMPONENT_TEMPLATE_HOME}/server-key.pem ${COMPONENT_STATE_HOME}/tls.key
        cat ${COMPONENT_TEMPLATE_HOME}/server.pem ${COMPONENT_STATE_HOME}/ca.crt >${COMPONENT_STATE_HOME}/tls.crt
        rm ${COMPONENT_TEMPLATE_HOME}/server.pem
        mv ${COMPONENT_TEMPLATE_HOME}/server.csr ${COMPONENT_STATE_HOME}/tls.csr
    fi
fi
